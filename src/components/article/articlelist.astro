---
import { getPermalink } from '~/utils/permalinks';
import { APP_BLOG } from 'nhavantuonglai:config';
import type { Post, ImageMetadata } from '~/types';
import { findImage } from '~/utils/images';

import Image from '~/components/common/image.astro';

export interface Props {
	posts: Array<Post>;
	layout?: 'grid' | 'list';
	variant?: 'compact' | 'detailed';
}

const { posts, layout = 'grid', variant = 'compact' } = Astro.props;
const commonClasses = "max-w-3xl mx-auto";

const truncateText = (text: string, maxWords: number, isTitle: boolean = false) => {
	const words = text.match(/[^\s,]+/g) || [];
	const truncated = words.slice(0, maxWords).join(' ');
	return isTitle && text.length > maxWords ? truncated + '…' : truncated + (words.length > maxWords ? '…' : '');
};
---

{posts && posts.length > 0 && (
	<div class={layout === 'grid' ? 'grid mb-6 gap-6 row-gap-5 md:grid-cols-3' : 'list-none'}>

		{posts.map(async (post) => {
			const image = await findImage(post.image) as ImageMetadata | string | undefined;
			const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : 'javascript:void(0)';
			
			return (

				<article
					class={`${
						layout === 'grid' ? '' : 'text-justify md:mb-62'
					} ${variant === 'detailed' && image ? 'grid-cols-3 md:gap-8' : ''}`}
				>

					{image && (
						<a class="relative block group" href={link} target="_blank">
							<div class="relative m-auto max-w-5xl">
								<Image
									src={image}
									alt={post.title}
									title={post.title}
								/>
							</div>
						</a>
					)}

					<div>
						<h3 class={variant === 'detailed' ? commonClasses : ''}>
							{APP_BLOG?.post?.isEnabled ? (
								<a href={link} class="text-primary" target="_blank">
									{truncateText(post.title, 60, true)}
								</a>
							) : (
								truncateText(post.title, 60, true)
							)}
						</h3>
						{post.description && (
							<p>{truncateText(post.description, variant === 'compact' ? 30 : 30)}</p>
						)}
					</div>

				</article>

			);
		})}

	</div>
)}